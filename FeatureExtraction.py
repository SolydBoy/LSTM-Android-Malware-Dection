import sys
import os

from FeatureExtraction.featureExtraction import featureExtraction, DECOMPILE_APK

args = sys.argv
if len(args) < 4:
    print("Argument 1 must be the path to your dataset"
          "second argument is where you want your decompiled data to be saved"
          "as last argument the path were the feature will be saved")
    sys.exit(1)
extractor = featureExtraction(args[3])

apk_name = os.listdir(f"{args[1]}/train/malware/")
apk_path = list(map(lambda x: f"{args[1]}/train/malware/" + x, apk_name))
extractor.extract_sequence_feature(apk_path, f"{args[2]}/train/malware/", "train", apktool_bool=DECOMPILE_APK)

apk_name = os.listdir(f"{args[1]}/train/benign/")
apk_path = list(map(lambda x: f"{args[1]}/train/benign/" + x, apk_name))
extractor.extract_sequence_feature(apk_path, f"{args[2]}/train/benign/", "train", apktool_bool=DECOMPILE_APK)

apk_name = os.listdir(f"{args[1]}/test/malware/")
apk_path = list(map(lambda x: f"{args[1]}/test/malware/" + x, apk_name))
extractor.extract_sequence_feature(apk_path, f"{args[2]}/test/malware/", "test", apktool_bool=DECOMPILE_APK)

apk_name = os.listdir(f"{args[1]}/test/benign/")
apk_path = list(map(lambda x: f"{args[1]}/test/benign/" + x, apk_name))
extractor.extract_sequence_feature(apk_path, f"{args[2]}/test/malware/", "test", apktool_bool=DECOMPILE_APK)
