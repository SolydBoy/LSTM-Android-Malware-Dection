import sys
import time
from tqdm import tqdm

import selenium
from selenium import webdriver
from selenium.webdriver.common.keys import Keys
from webdriver_manager.chrome import ChromeDriverManager

BAN_WORD = [
    "Summary",
    "Nested classes",
    "Constants",
    "Fields",
    "Public methods",
    "Inherited methods",
    "Constants",
    "Exceptions",
    "Classes",
    "Interfaces",
]

NAV_BAN_WORD = [
    "Class Index",
    "Package Index",
    "Overview",
]

ANDROID_URL = 'https://developer.android.com/'


driver = webdriver.Chrome(ChromeDriverManager().install())
driver.get("https://developer.android.com/reference/android/telephony/TelephonyManager#constants_1")
time.sleep(2)

elements = driver.find_element_by_class_name("devsite-nav-section")
elements = elements.find_elements_by_tag_name('a')
test = None

nav_list = []
for elem in elements:
    try:
        if elem.get_attribute("innerHTML").split('>')[1].split('<')[0] not in NAV_BAN_WORD:
            nav_list.append(elem.get_attribute('href'))
            if test is None:
                test = elem
    except IndexError:
        pass

nav_list = nav_list[nav_list.index("https://developer.android.com/reference/org/xml/sax/HandlerBase"):]
#print(nav_list[nav_list.index("https://developer.android.com/reference/android/view/MenuItem.OnActionExpandListener"):])
#print(len(nav_list))
with open("res5", "w") as f:
    for nav in tqdm(nav_list):
        res = []
        try:
            driver.get(nav)
        except selenium.common.exceptions.TimeoutException:
            try:
                driver.close()
                driver = webdriver.Chrome(ChromeDriverManager().install())
                driver.get(nav)
            except selenium.common.exceptions.WebDriverException:
                driver = webdriver.Chrome(ChromeDriverManager().install())
                driver.get(nav)
            time.sleep(2)
        in_elements = driver.find_elements_by_xpath("//a[@data-label='Right nav']")
        for elem in in_elements:
            data = elem.get_attribute("innerHTML").split('>')[1].split('<')[0]
            if data not in BAN_WORD:
                res.append(data)

        str_data = ''
        for e in res:
            str_data += '"' + e + '": 0,\n'
            f.write(str_data)
    driver.close()


